# YAML schema for GitHub Actions:
# https://help.github.com/en/actions/automating-your-workflow-with-github-actions/workflow-syntax-for-github-actions
#
# Helpful YAML parser to clarify YAML syntax:
# https://yaml-online-parser.appspot.com/

name: Cortex-M / Arm Compiler 6 
on:
  schedule:
    - cron: '0 4 * * *'

  # Allow manually triggering of the workflow.
  workflow_dispatch: {}

  pull_request_target:
    types:
      - closed
      - labeled

  workflow_call:
    inputs:
      trigger-sha:
        required: true
        type: string
    secrets:
      tflm-bot-token:
        required: true

jobs:
  cortex_m_generic:
    runs-on: ubuntu-latest

    if: |
      github.event_name == 'workflow_dispatch' ||
      (github.event_name == 'schedule' &&
       github.repository == 'tensorflow/tflite-micro') ||
      (github.event.action == 'labeled' &&
       github.event.label.name == 'ci:run_full')

    name: Cortex-M Generic
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          pip3 install Pillow
          pip3 install numpy

      - name: Install Arm tools
        uses: ARM-software/cmsis-actions/vcpkg@v1
        with: 
          config: "tensorflow/lite/micro/tools/github/arm/vcpkg-configuration.json"

      - name: Activate Arm tool license
        uses: ARM-software/cmsis-actions/armlm@v1

      - name: Test
        run: |
          tensorflow/lite/micro/tools/ci_build/test_cortex_m_generic.sh armclang

  cortex_m_corstone_300:
    runs-on: ubuntu-latest

    if: |
      github.event_name == 'workflow_dispatch' ||
      (github.event_name == 'schedule' &&
       github.repository == 'tensorflow/tflite-micro') ||
      (github.event.action == 'labeled' &&
       github.event.label.name == 'ci:run_full')

    name: Cortex-M Corstone 300 (FVP)
    steps:
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          pip3 install Pillow
          pip3 install numpy

      - name: Install Arm tools
        uses: ARM-software/cmsis-actions/vcpkg@v1
        with: 
          config: "tensorflow/lite/micro/tools/github/arm/vcpkg-configuration.json"
  
      - name: Activate Arm tool license
        uses: ARM-software/cmsis-actions/armlm@v1

      - name: Test
        run: |
          tensorflow/lite/micro/tools/ci_build/test_cortex_m_corstone_300.sh armclang

      - uses: actions/upload-artifact@v4
        with:
          name: my-artifact
          path: |
            tensorflow/
            gen/

  issue-on-error:
    needs: [cortex_m_generic, cortex_m_corstone_300]
    if: ${{ always() && contains(needs.*.result, 'failure') }}
    uses: ./.github/workflows/issue_on_error.yml
    with:
      repo: ${{ github.repository }}
      workflow: ${{ github.workflow }}
      run_id: ${{ github.run_id }}
      run_number: ${{ github.run_number }}
      flag_label: ci:bot_issue
    secrets:
      token: ${{ secrets.GITHUB_TOKEN }}
  
